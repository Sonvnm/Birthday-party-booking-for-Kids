@page "/Booking"
@model BirthdayPartyBookingForKids_Client.Pages.BookingModel
@{
    ViewData["Title"] = "Booking";
    var token = Request.Cookies["access_token"];
}

<a asp-page="/Customer/History" class="btn btn-primary">History</a>

@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success" role="alert">
        @Model.SuccessMessage
    </div>
}


<script>
    function validateAndSubmit() {
        event.preventDefault();
        // Perform validation for each field
        var locationId = document.getElementById('locationId').value;
        var participateAmount = document.getElementById('participateAmount').value;
        // Add validation for other fields as needed

        // Check if any field is empty
        if (!locationId || !participateAmount /* Add conditions for other fields */) {
            // Display error message
            alert('Please fill in all required fields.');
            return;
        }

        // Check additional validation rules (e.g., DateBooking > current date)
        var dateBooking = new Date(document.getElementById('dateBooking').value);
        var currentDate = new Date();
        if (dateBooking <= currentDate) {
            alert('Booking date must be after the current date.');
            return;
        }

        // If all validations pass, submit the form
        document.getElementById('bookingForm').submit();
    }
</script>

<h1>Booking</h1>


<a asp-page="/Login">Logout</a>
<a asp-page="/Customer/CustomerDetail">Customer Detail</a>
<form method="post" id="bookingForm">
    <div class="form-group">
        <input type="hidden" class="form-control" id="userId" name="UserId" />
    </div>
    <div class="form-group">
        <label>Location:</label>
        <select class="form-control" id="locationId" name="LocationId" asp-items="Model.Locations">
            <option value="">Select Location</option>
        </select>
        <span asp-validation-for="LocationId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Service:</label>
        <select class="form-control" id="serviceId" name="ServiceId" asp-items="Model.Services">
            <option value="">Select Service</option>
        </select>
        <span asp-validation-for="ServiceId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Participate Amount:</label>
        <input type="number" class="form-control" id="participateAmount" name="ParticipateAmount">
        <span asp-validation-for="ParticipateAmount" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Booking Date:</label>
        <input type="date" class="form-control" id="dateBooking" name="DateBooking">
        <span asp-validation-for="DateBooking" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Kid's Birthday:</label>
        <input type="date" class="form-control" id="kidBirthDay" name="KidBirthDay">
        <span asp-validation-for="KidBirthday" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Kid's Name:</label>
        <input type="text" class="form-control" id="kidName" name="KidName">
    </div>
    <div class="form-group">
        <label>Kid's Gender:</label>
        <select class="form-control" id="kidGender" name="KidGender">
            <option value="Male">Male</option>
            <option value="Female">Female</option>
        </select>
    </div>
    <div class="form-group">
        <label>Time:</label>
        <select class="form-control" id="time" name="Time">
            <option value="8:00am - 13:00pm">8:00am - 13:00pm</option>
            <option value="15:00pm - 20:00pm">15:00pm - 20:00pm</option>
        </select>
    </div>

    <div class="text-center mt-4">
        <button type="button" class="btn btn-primary" onclick="validateAndSubmit()">Book</button>
    </div>
    
</form>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <p>@Model.ErrorMessage</p>
}



